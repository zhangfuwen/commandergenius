# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the sdl_android branch
  push:
    branches: [ sdl_android ]
  pull_request:
    branches: [ sdl_android ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: update submodules
        run: |
          git submodule update --init project/jni/application/xserver-debian/debian-image
          cd project/jni/application/xserver-debian/debian-image
          git remote -v 
          git branch -av 
          cd -
          ls 
          git submodule update --init --recursive
          ls
        
      - name: setup build env
        run: |
          apt-get install -y bison make zip git locales pkg-config curl autoconf automake autopoint libtool libtool-bin help2man texinfo intltool xfonts-utils xutils-dev libfontenc-dev libxkbfile-dev libxmuu-dev libjpeg-dev libpng-dev libpixman-1-dev libssl-dev libpciaccess-dev
          apt-get install -y openjdk-8-jdk
          mkdir /opt/android-sdk
          cd /opt/android-sdk 
          curl --output sdk-tools-linux.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
          unzip sdk-tools-linux.zip
          echo -ne "y" | ./tools/bin/sdkmanager --install 'build-tools;29.0.2' 'platform-tools' 'platforms;android-29' 'tools'

      # Runs a set of commands using the runners shell
      - name: build
        run: |
          ./build.sh xserver
          echo test, and deploy your project.
